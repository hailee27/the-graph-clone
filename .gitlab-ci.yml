stages:
  - build

# include:
#   - template: Auto-DevOps.gitlab-ci.yml

# variables:
#   CI_DEPENDENCY_PROXY_SERVER: ''

# build:
#   image: 'registry.gitlab.com/gitlab-org/cluster-integration/auto-build-image:v1.49.0'
# .auto-deploy:
#   image: 'registry.gitlab.com/gitlab-org/cluster-integration/auto-deploy-image:v2.64.0'

.build_staging:
  stage: build
  image: node:19-alpine3.16
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - node_modules/
    policy: pull
  variables:
    GIT_STRATEGY: fetch
  before_script:
    - apk update && apk add openssh-client bash rsync yarn sshpass
    - apk --no-cache --virtual build-dependencies add python3 make g++
    - eval $(ssh-agent -s)
    # - bash -c 'ssh-add <(echo "$SSH_PRIVATE_KEY")'
    - mkdir -p ~/.ssh
    - ssh-keyscan -H $SSH_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    - rm -f .env
    - cp .env.sample.$CI_ENVIRONMENT_NAME .env
    - yarn cache clean --force
    - yarn install --frozen-lockfile
    - yarn build:staging

    - sshpass -p $SSH_PASSWORD ssh -T -p $SSH_PORT $SSH_USER@$SSH_SERVER_IP "pwd; source ~/.nvm/nvm.sh; cd $REMOTE_PROJECT_DIR; git pull;"

    - sshpass -p $SSH_PASSWORD rsync -a -e 'ssh -p $SSH_PORT' .env $SSH_USER@$SSH_SERVER_IP:$REMOTE_PROJECT_DIR/.env
    - sshpass -p $SSH_PASSWORD rsync -a -e 'ssh -p $SSH_PORT' node_modules/ $SSH_USER@$SSH_SERVER_IP:$REMOTE_PROJECT_DIR/node_modules
    - sshpass -p $SSH_PASSWORD rsync -a -e 'ssh -p $SSH_PORT' build/ $SSH_USER@$SSH_SERVER_IP:$REMOTE_PROJECT_DIR/build

    - ssh -T $SSH_USER@$SSH_SERVER_IP "pwd; source ~/.nvm/nvm.sh; pm2 restart jinsei-frontend;"
  tags:
    - local_sv

build_staging:
  extends: .build_staging
  only:
    refs:
      - staging
  environment:
    name: staging
